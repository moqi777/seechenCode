<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sv.springbootvue.mapper.MyuserMapper">
  <resultMap id="BaseResultMap" type="com.sv.springbootvue.pojo.Myuser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="regTime" jdbcType="TIMESTAMP" property="regtime" />
    <result column="integral" jdbcType="INTEGER" property="integral" />
    <result column="sex" jdbcType="CHAR" property="sex" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, regTime, integral, sex
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from myuser
    where id = #{id,jdbcType=INTEGER}
  </select>
    <select id="selectLimit" resultMap="BaseResultMap">
      select
      <include refid="Base_Column_List"></include>
      from myuser
        <where>
          <if test="name!=null">
            <bind value="'%'+name+'%'" name="newName"/>
            and name like #{newName}
          </if>
          <if test="regtime!=null">
            and regtime = #{regtime}
          </if>
          <if test="integral!=null">
            and integral = #{integral}
          </if>
          <if test="sex!=null">
            and sex = #{sex}
          </if>
        </where>
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from myuser
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sv.springbootvue.pojo.Myuser">
    insert into myuser (id, name, regTime, 
      integral, sex)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{regtime,jdbcType=TIMESTAMP}, 
      #{integral,jdbcType=INTEGER}, #{sex,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sv.springbootvue.pojo.Myuser">
    insert into myuser
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="regtime != null">
        regTime,
      </if>
      <if test="integral != null">
        integral,
      </if>
      <if test="sex != null">
        sex,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="regtime != null">
        #{regtime,jdbcType=TIMESTAMP},
      </if>
      <if test="integral != null">
        #{integral,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sv.springbootvue.pojo.Myuser">
    update myuser
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="regtime != null">
        regTime = #{regtime,jdbcType=TIMESTAMP},
      </if>
      <if test="integral != null">
        integral = #{integral,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sv.springbootvue.pojo.Myuser">
    update myuser
    set name = #{name,jdbcType=VARCHAR},
      regTime = #{regtime,jdbcType=TIMESTAMP},
      integral = #{integral,jdbcType=INTEGER},
      sex = #{sex,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>