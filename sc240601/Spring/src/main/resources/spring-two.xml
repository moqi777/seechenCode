<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--IOC扫描包：但是虽然以后可以写父包 里面的子包都可以扫描
        但是以后在SSM整合 不要这么写
        原因：spring 要扫描，springMVC 也要扫描
        如果写父包 扫描一定会重复扫描 会创建多个无用对象出来
        以后：spring只负责扫描业务层 springMVC只负责扫描控制层 dao层不用扫描 靠spring整合-->
    <context:component-scan base-package="com.spring.service,com.spring.dao,com.spring.aop"/>
    <!--
        scope:
            singleton：默认单例
            prototype：多例
            但是下面三种会失效：
            要在里面添加一个配置 <aop:scoped-proxy/>
            Request：一个请求
            session：一次会话
            全局session：application 一个应用
    -->
    <bean scope="application" id="user" class="com.spring.pojo.User">
        <aop:scoped-proxy/>
    </bean>

    <!--aop配置-->
    <aop:config>
        <!--1.配置切入点：告诉spring哪些方法需要经过切面-->
        <aop:pointcut id="pc" expression="execution(* com.spring.service.impl.*.*(..))"/>
        <!--2.配置切面：告诉spring哪个bean是负责实现切面-->
        <!--可以配置多个切面-->
        <aop:aspect id="log" ref="mylog">
            <!--告诉spring切面的哪个方法是做什么通知-->
            <aop:before method="aa" pointcut-ref="pc"/>
            <aop:after-returning method="bb" returning="result" pointcut-ref="pc"/>
            <aop:after-throwing method="cc" throwing="e" pointcut-ref="pc"/>
            <aop:after method="dd" pointcut-ref="pc"/>
            <aop:around method="ee" pointcut-ref="pc"/>
        </aop:aspect>
    </aop:config>
    <bean id="mylog" class="com.spring.aop.MyLog"/>

    <!--开启AOP注解：让@Aspect @Pointcut... 生效-->
    <aop:aspectj-autoproxy/>

</beans>