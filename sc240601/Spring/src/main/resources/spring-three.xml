<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--spring完成事务-->
    <!--1.加载jdbc配置文件 读取后${key} 获取value-->
    <context:property-placeholder location="classpath*:jdbc.properties"/>
    <!--2.创建德鲁伊连接池-->
    <bean id="druid" class="com.alibaba.druid.pool.DruidDataSource"
            init-method="init" destroy-method="close">
        <!--必要配置-->
        <property name="url" value="${jdbc.url}"/>
        <property name="driverClassName" value="${jdbc.driver}"/>
        <!--bug 如果jdbc的key值是username和password spring会把它当成系统用户账户和密码-->
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <!--可选配置：可以不写 因为都有默认值-->
        <!--初始连接大小-->
        <property name="initialSize" value="5"/>
        <!--最小连接数-->
        <property name="minIdle" value="5"/>
        <!--最大连接数-->
        <property name="maxActive" value="20"/>
        <!--最大等待时间 单位是毫秒-->
        <property name="maxWait" value="60000"/>
    </bean>
    <!--3.配置事务管理类-->
    <bean id="tm" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="druid"/>
    </bean>
    <!--4.配置声明式事务策略-->
    <!--<tx:advice id="ad" transaction-manager="tm">-->
    <!--    <tx:attributes>-->
    <!--        &lt;!&ndash;配置规则：配置不同种类的方法要做什么样的事务-->
    <!--            还有事务的传播特性-->
    <!--            name：表示哪种方法 通常通过通配符编写-->
    <!--            read-only：设置是否是只读事务 默认是false-->
    <!--            propagation：设置事务传播特性 默认REQUIRED-->
    <!--            比如name：add* 表示切入点里面所有类的所有方法只要add开头的方法都算-->
    <!--        &ndash;&gt;-->
    <!--        <tx:method name="add*" read-only="false" propagation="REQUIRED"/>-->
    <!--        <tx:method name="insert*" read-only="false" propagation="REQUIRED"/>-->
    <!--        <tx:method name="save*" read-only="false" propagation="REQUIRED"/>-->
    <!--        <tx:method name="del*" read-only="false" propagation="REQUIRED"/>-->
    <!--        <tx:method name="update*" read-only="false" propagation="REQUIRED"/>-->
    <!--        &lt;!&ndash;如果是查询 一般都是只读事务 因为查询不改数据&ndash;&gt;-->
    <!--        <tx:method name="show*" read-only="true" propagation="REQUIRED"/>-->
    <!--        <tx:method name="select*" read-only="true" propagation="REQUIRED"/>-->
    <!--        <tx:method name="query*" read-only="true" propagation="REQUIRED"/>-->
    <!--    </tx:attributes>-->
    <!--</tx:advice>-->
    <!--&lt;!&ndash;5.配置AOP：切入点&ndash;&gt;-->
    <!--<aop:config>-->
    <!--    <aop:pointcut id="pc" expression="execution(* com.spring.service.impl.*.*(..))"/>-->
    <!--    <aop:advisor advice-ref="ad" pointcut-ref="pc"/>-->
    <!--</aop:config>-->

    <!--4.事务开启注解，开启注解驱动，开启aop注解-->
    <tx:annotation-driven transaction-manager="tm"/>
    <aop:aspectj-autoproxy/>
</beans>